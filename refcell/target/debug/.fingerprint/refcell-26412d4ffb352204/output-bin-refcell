{"message":"`main` function not found in crate `refcell`","code":{"code":"E0601","explanation":"No `main` function was found in a binary crate.\n\nTo fix this error, add a `main` function:\n\n```\nfn main() {\n    // Your program will start here.\n    println!(\"Hello world!\");\n}\n```\n\nIf you don't know the basics of Rust, you can look at the\n[Rust Book][rust-book] to get started.\n\n[rust-book]: https://doc.rust-lang.org/book/\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":0,"byte_end":1772,"line_start":1,"line_end":73,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub trait Messenger {","highlight_start":1,"highlight_end":22},{"text":"    fn send(&self, msg: &str);","highlight_start":1,"highlight_end":31},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"pub struct LimitTracker<'a, T: Messenger> {","highlight_start":1,"highlight_end":44},{"text":"    messenger: &'a T,","highlight_start":1,"highlight_end":22},{"text":"    value: usize,","highlight_start":1,"highlight_end":18},{"text":"    max: usize,","highlight_start":1,"highlight_end":16},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"impl<'a, T> LimitTracker<'a, T>","highlight_start":1,"highlight_end":32},{"text":"where","highlight_start":1,"highlight_end":6},{"text":"    T: Messenger,","highlight_start":1,"highlight_end":18},{"text":"{","highlight_start":1,"highlight_end":2},{"text":"    pub fn new(messenger: &T, max: usize) -> LimitTracker<T> {","highlight_start":1,"highlight_end":63},{"text":"        LimitTracker {","highlight_start":1,"highlight_end":23},{"text":"            messenger,","highlight_start":1,"highlight_end":23},{"text":"            value: 0,","highlight_start":1,"highlight_end":22},{"text":"            max,","highlight_start":1,"highlight_end":17},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn set_value(&mut self, value: usize) {","highlight_start":1,"highlight_end":48},{"text":"        self.value = value;","highlight_start":1,"highlight_end":28},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        let percentage_of_max = self.value as f64 / self.max as f64;","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        if percentage_of_max >= 1.0 {","highlight_start":1,"highlight_end":38},{"text":"            self.messenger.send(\"Error: You are over your quota!\");","highlight_start":1,"highlight_end":68},{"text":"        } else if percentage_of_max >= 0.9 {","highlight_start":1,"highlight_end":45},{"text":"            self.messenger","highlight_start":1,"highlight_end":27},{"text":"                .send(\"Urgent warning: You've used up over 90% of your quota!\");","highlight_start":1,"highlight_end":81},{"text":"        } else if percentage_of_max >= 0.75 {","highlight_start":1,"highlight_end":46},{"text":"            self.messenger","highlight_start":1,"highlight_end":27},{"text":"                .send(\"Warning: You've used up over 75% of your quota!\");","highlight_start":1,"highlight_end":74},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"#[cfg(test)]","highlight_start":1,"highlight_end":13},{"text":"mod tests {","highlight_start":1,"highlight_end":12},{"text":"    use super::*;","highlight_start":1,"highlight_end":18},{"text":"    use std::cell::RefCell;","highlight_start":1,"highlight_end":28},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    struct MockMessenger {","highlight_start":1,"highlight_end":27},{"text":"        sent_messages: RefCell<Vec<String>>,","highlight_start":1,"highlight_end":45},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    impl MockMessenger {","highlight_start":1,"highlight_end":25},{"text":"        fn new() -> MockMessenger {","highlight_start":1,"highlight_end":36},{"text":"            MockMessenger {","highlight_start":1,"highlight_end":28},{"text":"                sent_messages: RefCell::new(vec![]),","highlight_start":1,"highlight_end":53},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    impl Messenger for MockMessenger {","highlight_start":1,"highlight_end":39},{"text":"        fn send(&self, message: &str) {","highlight_start":1,"highlight_end":40},{"text":"            self.sent_messages.borrow_mut().push(String::from(message));","highlight_start":1,"highlight_end":73},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[test]","highlight_start":1,"highlight_end":12},{"text":"    fn it_sends_an_over_75_percent_warning_message() {","highlight_start":1,"highlight_end":55},{"text":"        // --snip--","highlight_start":1,"highlight_end":20},{"text":"        let mock_messenger = MockMessenger::new();","highlight_start":1,"highlight_end":51},{"text":"        let mut limit_tracker = LimitTracker::new(&mock_messenger, 100);","highlight_start":1,"highlight_end":73},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        limit_tracker.set_value(80);","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        assert_eq!(mock_messenger.sent_messages.borrow().len(), 1);","highlight_start":1,"highlight_end":68},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":"consider adding a `main` function to `src/main.rs`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0601]\u001b[0m\u001b[0m\u001b[1m: `main` function not found in crate `refcell`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:1:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Messenger {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn send(&self, msg: &str);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mconsider adding a `main` function to `src/main.rs`\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0601`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0601`.\u001b[0m\n"}
