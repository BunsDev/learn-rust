{"message":"the name `Messenger` is defined multiple times","code":{"code":"E0428","explanation":"A type or module has been defined more than once.\n\nErroneous code example:\n\n```compile_fail,E0428\nstruct Bar;\nstruct Bar; // error: duplicate definition of value `Bar`\n```\n\nPlease verify you didn't misspell the type/module's name or remove/rename the\nduplicated one. Example:\n\n```\nstruct Bar;\nstruct Bar2; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":954,"byte_end":973,"line_start":40,"line_end":40,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Messenger {","highlight_start":1,"highlight_end":20}],"label":"`Messenger` redefined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":0,"byte_end":19,"line_start":1,"line_end":1,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub trait Messenger {","highlight_start":1,"highlight_end":20}],"label":"previous definition of the trait `Messenger` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`Messenger` must be defined only once in the type namespace of this module","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0428]\u001b[0m\u001b[0m\u001b[1m: the name `Messenger` is defined multiple times\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:40:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub trait Messenger {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mprevious definition of the trait `Messenger` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub trait Messenger {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`Messenger` redefined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `Messenger` must be defined only once in the type namespace of this module\u001b[0m\n\n"}
{"message":"the name `LimitTracker` is defined multiple times","code":{"code":"E0428","explanation":"A type or module has been defined more than once.\n\nErroneous code example:\n\n```compile_fail,E0428\nstruct Bar;\nstruct Bar; // error: duplicate definition of value `Bar`\n```\n\nPlease verify you didn't misspell the type/module's name or remove/rename the\nduplicated one. Example:\n\n```\nstruct Bar;\nstruct Bar2; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1010,"byte_end":1051,"line_start":44,"line_end":44,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"pub struct LimitTracker<'a, T: Messenger> {","highlight_start":1,"highlight_end":42}],"label":"`LimitTracker` redefined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":56,"byte_end":97,"line_start":5,"line_end":5,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"pub struct LimitTracker<'a, T: Messenger> {","highlight_start":1,"highlight_end":42}],"label":"previous definition of the type `LimitTracker` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`LimitTracker` must be defined only once in the type namespace of this module","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0428]\u001b[0m\u001b[0m\u001b[1m: the name `LimitTracker` is defined multiple times\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:44:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct LimitTracker<'a, T: Messenger> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mprevious definition of the type `LimitTracker` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct LimitTracker<'a, T: Messenger> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`LimitTracker` redefined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `LimitTracker` must be defined only once in the type namespace of this module\u001b[0m\n\n"}
{"message":"`main` function not found in crate `refcell`","code":{"code":"E0601","explanation":"No `main` function was found in a binary crate.\n\nTo fix this error, add a `main` function:\n\n```\nfn main() {\n    // Your program will start here.\n    println!(\"Hello world!\");\n}\n```\n\nIf you don't know the basics of Rust, you can look at the\n[Rust Book][rust-book] to get started.\n\n[rust-book]: https://doc.rust-lang.org/book/\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":0,"byte_end":2706,"line_start":1,"line_end":111,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub trait Messenger {","highlight_start":1,"highlight_end":22},{"text":"    fn send(&self, msg: &str);","highlight_start":1,"highlight_end":31},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"pub struct LimitTracker<'a, T: Messenger> {","highlight_start":1,"highlight_end":44},{"text":"    messenger: &'a T,","highlight_start":1,"highlight_end":22},{"text":"    value: usize,","highlight_start":1,"highlight_end":18},{"text":"    max: usize,","highlight_start":1,"highlight_end":16},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"impl<'a, T> LimitTracker<'a, T>","highlight_start":1,"highlight_end":32},{"text":"where","highlight_start":1,"highlight_end":6},{"text":"    T: Messenger,","highlight_start":1,"highlight_end":18},{"text":"{","highlight_start":1,"highlight_end":2},{"text":"    pub fn new(messenger: &T, max: usize) -> LimitTracker<T> {","highlight_start":1,"highlight_end":63},{"text":"        LimitTracker {","highlight_start":1,"highlight_end":23},{"text":"            messenger,","highlight_start":1,"highlight_end":23},{"text":"            value: 0,","highlight_start":1,"highlight_end":22},{"text":"            max,","highlight_start":1,"highlight_end":17},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn set_value(&mut self, value: usize) {","highlight_start":1,"highlight_end":48},{"text":"        self.value = value;","highlight_start":1,"highlight_end":28},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        let percentage_of_max = self.value as f64 / self.max as f64;","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        if percentage_of_max >= 1.0 {","highlight_start":1,"highlight_end":38},{"text":"            self.messenger.send(\"Error: You are over your quota!\");","highlight_start":1,"highlight_end":68},{"text":"        } else if percentage_of_max >= 0.9 {","highlight_start":1,"highlight_end":45},{"text":"            self.messenger","highlight_start":1,"highlight_end":27},{"text":"                .send(\"Urgent warning: You've used up over 90% of your quota!\");","highlight_start":1,"highlight_end":81},{"text":"        } else if percentage_of_max >= 0.75 {","highlight_start":1,"highlight_end":46},{"text":"            self.messenger","highlight_start":1,"highlight_end":27},{"text":"                .send(\"Warning: You've used up over 75% of your quota!\");","highlight_start":1,"highlight_end":74},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"pub trait Messenger {","highlight_start":1,"highlight_end":22},{"text":"    fn send(&self, msg: &str);","highlight_start":1,"highlight_end":31},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"pub struct LimitTracker<'a, T: Messenger> {","highlight_start":1,"highlight_end":44},{"text":"    messenger: &'a T,","highlight_start":1,"highlight_end":22},{"text":"    value: usize,","highlight_start":1,"highlight_end":18},{"text":"    max: usize,","highlight_start":1,"highlight_end":16},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"impl<'a, T> LimitTracker<'a, T>","highlight_start":1,"highlight_end":32},{"text":"where","highlight_start":1,"highlight_end":6},{"text":"    T: Messenger,","highlight_start":1,"highlight_end":18},{"text":"{","highlight_start":1,"highlight_end":2},{"text":"    pub fn new(messenger: &T, max: usize) -> LimitTracker<T> {","highlight_start":1,"highlight_end":63},{"text":"        LimitTracker {","highlight_start":1,"highlight_end":23},{"text":"            messenger,","highlight_start":1,"highlight_end":23},{"text":"            value: 0,","highlight_start":1,"highlight_end":22},{"text":"            max,","highlight_start":1,"highlight_end":17},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn set_value(&mut self, value: usize) {","highlight_start":1,"highlight_end":48},{"text":"        self.value = value;","highlight_start":1,"highlight_end":28},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        let percentage_of_max = self.value as f64 / self.max as f64;","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        if percentage_of_max >= 1.0 {","highlight_start":1,"highlight_end":38},{"text":"            self.messenger.send(\"Error: You are over your quota!\");","highlight_start":1,"highlight_end":68},{"text":"        } else if percentage_of_max >= 0.9 {","highlight_start":1,"highlight_end":45},{"text":"            self.messenger","highlight_start":1,"highlight_end":27},{"text":"                .send(\"Urgent warning: You've used up over 90% of your quota!\");","highlight_start":1,"highlight_end":81},{"text":"        } else if percentage_of_max >= 0.75 {","highlight_start":1,"highlight_end":46},{"text":"            self.messenger","highlight_start":1,"highlight_end":27},{"text":"                .send(\"Warning: You've used up over 75% of your quota!\");","highlight_start":1,"highlight_end":74},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"#[cfg(test)]","highlight_start":1,"highlight_end":13},{"text":"mod tests {","highlight_start":1,"highlight_end":12},{"text":"    use super::*;","highlight_start":1,"highlight_end":18},{"text":"    use std::cell::RefCell;","highlight_start":1,"highlight_end":28},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    struct MockMessenger {","highlight_start":1,"highlight_end":27},{"text":"        sent_messages: RefCell<Vec<String>>,","highlight_start":1,"highlight_end":45},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    impl MockMessenger {","highlight_start":1,"highlight_end":25},{"text":"        fn new() -> MockMessenger {","highlight_start":1,"highlight_end":36},{"text":"            MockMessenger {","highlight_start":1,"highlight_end":28},{"text":"                sent_messages: RefCell::new(vec![]),","highlight_start":1,"highlight_end":53},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    impl Messenger for MockMessenger {","highlight_start":1,"highlight_end":39},{"text":"        fn send(&self, message: &str) {","highlight_start":1,"highlight_end":40},{"text":"            self.sent_messages.borrow_mut().push(String::from(message));","highlight_start":1,"highlight_end":73},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[test]","highlight_start":1,"highlight_end":12},{"text":"    fn it_sends_an_over_75_percent_warning_message() {","highlight_start":1,"highlight_end":55},{"text":"        let mock_messenger = MockMessenger::new();","highlight_start":1,"highlight_end":51},{"text":"        let mut limit_tracker = LimitTracker::new(&mock_messenger, 100);","highlight_start":1,"highlight_end":73},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        limit_tracker.set_value(80);","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        assert_eq!(mock_messenger.sent_messages.borrow().len(), 1);","highlight_start":1,"highlight_end":68},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":"consider adding a `main` function to `src/main.rs`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0601]\u001b[0m\u001b[0m\u001b[1m: `main` function not found in crate `refcell`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:1:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Messenger {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn send(&self, msg: &str);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mconsider adding a `main` function to `src/main.rs`\u001b[0m\n\n"}
{"message":"duplicate definitions with name `new`","code":{"code":"E0592","explanation":"This error occurs when you defined methods or associated functions with same\nname.\n\nErroneous code example:\n\n```compile_fail,E0592\nstruct Foo;\n\nimpl Foo {\n    fn bar() {} // previous definition here\n}\n\nimpl Foo {\n    fn bar() {} // duplicate definition here\n}\n```\n\nA similar error is E0201. The difference is whether there is one declaration\nblock or not. To avoid this error, you must give each `fn` a unique name.\n\n```\nstruct Foo;\n\nimpl Foo {\n    fn bar() {}\n}\n\nimpl Foo {\n    fn baz() {} // define with different name\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":221,"byte_end":277,"line_start":15,"line_end":15,"column_start":5,"column_end":61,"is_primary":true,"text":[{"text":"    pub fn new(messenger: &T, max: usize) -> LimitTracker<T> {","highlight_start":5,"highlight_end":61}],"label":"duplicate definitions for `new`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1175,"byte_end":1231,"line_start":54,"line_end":54,"column_start":5,"column_end":61,"is_primary":false,"text":[{"text":"    pub fn new(messenger: &T, max: usize) -> LimitTracker<T> {","highlight_start":5,"highlight_end":61}],"label":"other definition for `new`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0592]\u001b[0m\u001b[0m\u001b[1m: duplicate definitions with name `new`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn new(messenger: &T, max: usize) -> LimitTracker<T> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mduplicate definitions for `new`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn new(messenger: &T, max: usize) -> LimitTracker<T> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mother definition for `new`\u001b[0m\n\n"}
{"message":"duplicate definitions with name `set_value`","code":{"code":"E0592","explanation":"This error occurs when you defined methods or associated functions with same\nname.\n\nErroneous code example:\n\n```compile_fail,E0592\nstruct Foo;\n\nimpl Foo {\n    fn bar() {} // previous definition here\n}\n\nimpl Foo {\n    fn bar() {} // duplicate definition here\n}\n```\n\nA similar error is E0201. The difference is whether there is one declaration\nblock or not. To avoid this error, you must give each `fn` a unique name.\n\n```\nstruct Foo;\n\nimpl Foo {\n    fn bar() {}\n}\n\nimpl Foo {\n    fn baz() {} // define with different name\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":386,"byte_end":427,"line_start":23,"line_end":23,"column_start":5,"column_end":46,"is_primary":true,"text":[{"text":"    pub fn set_value(&mut self, value: usize) {","highlight_start":5,"highlight_end":46}],"label":"duplicate definitions for `set_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1340,"byte_end":1381,"line_start":62,"line_end":62,"column_start":5,"column_end":46,"is_primary":false,"text":[{"text":"    pub fn set_value(&mut self, value: usize) {","highlight_start":5,"highlight_end":46}],"label":"other definition for `set_value`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0592]\u001b[0m\u001b[0m\u001b[1m: duplicate definitions with name `set_value`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:23:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn set_value(&mut self, value: usize) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mduplicate definitions for `set_value`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn set_value(&mut self, value: usize) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mother definition for `set_value`\u001b[0m\n\n"}
{"message":"aborting due to 5 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 5 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0428, E0592, E0601.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0428, E0592, E0601.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0428`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0428`.\u001b[0m\n"}
